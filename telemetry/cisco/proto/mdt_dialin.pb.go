// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: mdt_dialin.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId     int64       `protobuf:"varint,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Encode        int64       `protobuf:"varint,2,opt,name=encode,proto3" json:"encode,omitempty"`
	SubcriptionId string      `protobuf:"bytes,3,opt,name=subcriptionId,proto3" json:"subcriptionId,omitempty"`
	Qos           *QOSMarking `protobuf:"bytes,4,opt,name=qos,proto3" json:"qos,omitempty"`
	Subscriptions []string    `protobuf:"bytes,5,rep,name=Subscriptions,proto3" json:"Subscriptions,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdt_dialin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mdt_dialin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_mdt_dialin_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SubscribeRequest) GetEncode() int64 {
	if x != nil {
		return x.Encode
	}
	return 0
}

func (x *SubscribeRequest) GetSubcriptionId() string {
	if x != nil {
		return x.SubcriptionId
	}
	return ""
}

func (x *SubscribeRequest) GetQos() *QOSMarking {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *SubscribeRequest) GetSubscriptions() []string {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64  `protobuf:"varint,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Data      []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Errors    string `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdt_dialin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mdt_dialin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_mdt_dialin_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeResponse) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SubscribeResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeResponse) GetErrors() string {
	if x != nil {
		return x.Errors
	}
	return ""
}

type QOSMarking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marking uint32 `protobuf:"varint,1,opt,name=marking,proto3" json:"marking,omitempty"`
}

func (x *QOSMarking) Reset() {
	*x = QOSMarking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mdt_dialin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QOSMarking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QOSMarking) ProtoMessage() {}

func (x *QOSMarking) ProtoReflect() protoreflect.Message {
	mi := &file_mdt_dialin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QOSMarking.ProtoReflect.Descriptor instead.
func (*QOSMarking) Descriptor() ([]byte, []int) {
	return file_mdt_dialin_proto_rawDescGZIP(), []int{2}
}

func (x *QOSMarking) GetMarking() uint32 {
	if x != nil {
		return x.Marking
	}
	return 0
}

var File_mdt_dialin_proto protoreflect.FileDescriptor

var file_mdt_dialin_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x64, 0x74, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x22, 0x49, 0x4f, 0x53, 0x58, 0x52, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x49, 0x4f, 0x53, 0x58, 0x52, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x4f, 0x53, 0x4d, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x5d, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x26,
	0x0a, 0x0a, 0x51, 0x4f, 0x53, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x32, 0x8f, 0x01, 0x0a, 0x0e, 0x67, 0x52, 0x50, 0x43, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x12, 0x34, 0x2e, 0x49, 0x4f, 0x53, 0x58, 0x52, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x49, 0x4f, 0x53, 0x58, 0x52, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mdt_dialin_proto_rawDescOnce sync.Once
	file_mdt_dialin_proto_rawDescData = file_mdt_dialin_proto_rawDesc
)

func file_mdt_dialin_proto_rawDescGZIP() []byte {
	file_mdt_dialin_proto_rawDescOnce.Do(func() {
		file_mdt_dialin_proto_rawDescData = protoimpl.X.CompressGZIP(file_mdt_dialin_proto_rawDescData)
	})
	return file_mdt_dialin_proto_rawDescData
}

var file_mdt_dialin_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mdt_dialin_proto_goTypes = []interface{}{
	(*SubscribeRequest)(nil),  // 0: IOSXRExtensibleManagabilityService.SubscribeRequest
	(*SubscribeResponse)(nil), // 1: IOSXRExtensibleManagabilityService.SubscribeResponse
	(*QOSMarking)(nil),        // 2: IOSXRExtensibleManagabilityService.QOSMarking
}
var file_mdt_dialin_proto_depIdxs = []int32{
	2, // 0: IOSXRExtensibleManagabilityService.SubscribeRequest.qos:type_name -> IOSXRExtensibleManagabilityService.QOSMarking
	0, // 1: IOSXRExtensibleManagabilityService.gRPCConfigOper.CreateSubs:input_type -> IOSXRExtensibleManagabilityService.SubscribeRequest
	1, // 2: IOSXRExtensibleManagabilityService.gRPCConfigOper.CreateSubs:output_type -> IOSXRExtensibleManagabilityService.SubscribeResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mdt_dialin_proto_init() }
func file_mdt_dialin_proto_init() {
	if File_mdt_dialin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mdt_dialin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdt_dialin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mdt_dialin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QOSMarking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mdt_dialin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mdt_dialin_proto_goTypes,
		DependencyIndexes: file_mdt_dialin_proto_depIdxs,
		MessageInfos:      file_mdt_dialin_proto_msgTypes,
	}.Build()
	File_mdt_dialin_proto = out.File
	file_mdt_dialin_proto_rawDesc = nil
	file_mdt_dialin_proto_goTypes = nil
	file_mdt_dialin_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GRPCConfigOperClient is the client API for GRPCConfigOper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCConfigOperClient interface {
	CreateSubs(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (GRPCConfigOper_CreateSubsClient, error)
}

type gRPCConfigOperClient struct {
	cc grpc.ClientConnInterface
}

func NewGRPCConfigOperClient(cc grpc.ClientConnInterface) GRPCConfigOperClient {
	return &gRPCConfigOperClient{cc}
}

func (c *gRPCConfigOperClient) CreateSubs(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (GRPCConfigOper_CreateSubsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCConfigOper_serviceDesc.Streams[0], "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CreateSubs", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCConfigOperCreateSubsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCConfigOper_CreateSubsClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type gRPCConfigOperCreateSubsClient struct {
	grpc.ClientStream
}

func (x *gRPCConfigOperCreateSubsClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GRPCConfigOperServer is the server API for GRPCConfigOper service.
type GRPCConfigOperServer interface {
	CreateSubs(*SubscribeRequest, GRPCConfigOper_CreateSubsServer) error
}

// UnimplementedGRPCConfigOperServer can be embedded to have forward compatible implementations.
type UnimplementedGRPCConfigOperServer struct {
}

func (*UnimplementedGRPCConfigOperServer) CreateSubs(*SubscribeRequest, GRPCConfigOper_CreateSubsServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateSubs not implemented")
}

func RegisterGRPCConfigOperServer(s *grpc.Server, srv GRPCConfigOperServer) {
	s.RegisterService(&_GRPCConfigOper_serviceDesc, srv)
}

func _GRPCConfigOper_CreateSubs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCConfigOperServer).CreateSubs(m, &gRPCConfigOperCreateSubsServer{stream})
}

type GRPCConfigOper_CreateSubsServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type gRPCConfigOperCreateSubsServer struct {
	grpc.ServerStream
}

func (x *gRPCConfigOperCreateSubsServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _GRPCConfigOper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IOSXRExtensibleManagabilityService.gRPCConfigOper",
	HandlerType: (*GRPCConfigOperServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateSubs",
			Handler:       _GRPCConfigOper_CreateSubs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mdt_dialin.proto",
}
