apiVersion: apps/v1
{{- if eq .Values.serviceDiscovery "consul" }}
kind: Deployment
{{- else }}
kind: StatefulSet
{{- end }}
metadata:
  name: panoptes-stream
spec:
  selector:
    matchLabels:
      app: panoptes-stream
  {{- if eq .Values.serviceDiscovery "k8s" }}    
  serviceName: panoptes
  {{- end }}     
  replicas: {{ .Values.replicaCount}}
  template:
    metadata:
      labels:
        app: panoptes-stream
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"  
    spec:
      serviceAccountName: panoptes
      {{- if .Values.affinity }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                  app: panoptes-stream
            topologyKey: kubernetes.io/hostname
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                  app: consul
            topologyKey: kubernetes.io/hostname
      {{- end }}
      containers:
        - name: panoptes
          image: panoptes-stream
          imagePullPolicy: Never
          {{- if eq .Values.configuration "consul" }} 
          args:
            - "-consul"
            - "-"
          {{- else if eq .Values.configuration "k8s" }}
          args:
            - "-config"
            - "/etc/panoptes/config.yaml"
          {{- end }}    
          env:
          - name: HOST_IP
            valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
                fieldRef:
                  fieldPath: status.podIP          
          - name: CONSUL_HTTP_ADDR 
            value: "$(HOST_IP):8500"         
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8081
              scheme: HTTP 
            timeoutSeconds: 2
          volumeMounts:
            - name: panoptes-config
              mountPath: /etc/panoptes

      volumes:
        - name: panoptes-config
          configMap:
            name: panoptes-config        

